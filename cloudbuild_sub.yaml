steps:
  - name: 'gcr.io/cloud-builders/go:1.17'
    id: 'go-test'
    args:
      - '-c'
      - |
        go test -v -race
    entrypoint: /bin/sh
  - name: 'gcr.io/cloud-builders/go:1.17'
    id: 'go-build'
    waitFor: ['go-test']
    args:
      - '-c'
      - |
        make build
        cp vault/plugins/vault-plugin-aead docker/vault-plugin-aead
    entrypoint: /bin/sh

  - name: gcr.io/cloud-builders/docker
    id: 'container-build'
    waitFor: ['go-build']
    entrypoint: /bin/bash
    args:
      - build
      - '-t'
      - '${_TARGET}:${_TARGET_TAG}'
      - .
    dir: docker
  - name: gcr.io/cloud-builders/docker
    id: 'container-push'
    waitFor: ['container-build']
    entrypoint: /bin/bash
    args:
    - -c
    - |
      BUILD_TAG=$(cat ../version/version.go | grep -E "const Version = " | sed -E 's/.*const Version = \"//' | sed -E 's/\"//')-${_TARGET_TAG}
      docker tag ${_TARGET}:${_TARGET_TAG} ${_TARGET}:$${BUILD_TAG}-rc
      docker push ${_TARGET}:$${BUILD_TAG}-rc
timeout: 1200s      
images: [ '${_TARGET}:${_TARGET_TAG}' ]
logsBucket: 'gs://vf-grp-clouddmz-lab-logging'
options:
  workerPool: projects/vf-grp-clouddmz-lab/locations/europe-west1/workerPools/worker-pool2
  env:
    - 'GOPRIVATE=github.com/pierrec,google.golang.org'
    - 'GOOS=linux'
    - 'GOARCH=amd64'
